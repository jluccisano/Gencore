<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:flex="http://www.springframework.org/schema/flex" 
		xmlns:jee="http://www.springframework.org/schema/jee"		
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							http://www.springframework.org/schema/flex
							http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
		
		
	<!-- Maps request paths at /* to the BlazeDS MessageBroker -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<value>
				/*=_messageBroker
			</value>
		</property>
	</bean>

    <bean id="flexExceptionTranslator" class="com.gencore.backend.java.exception.FlexExceptionTranslator" />
    
    <flex:message-broker id="_messageBroker">
		<flex:exception-translator ref="flexExceptionTranslator"/>
	</flex:message-broker>
    
	<!-- Dispatches requests mapped to a MessageBroker -->
	<bean class="org.springframework.flex.servlet.MessageBrokerHandlerAdapter"/>
	
	<!-- Bootstraps and exposes the BlazeDS MessageBroker -->
<!--	<bean id="_messageBroker" class="org.springframework.flex.core.MessageBrokerFactoryBean">-->
<!--	</bean>-->
	

	
	 <bean id="remoteLogger" class="org.springframework.flex.remoting.RemotingDestinationExporter">
        <property name="messageBroker" ref="_messageBroker"/>
        <property name="service" ref="remoteLoggerBean"/>
    </bean>  
    
    <bean id="remoteLoggerBean" class="com.gencore.portal.java.log.RemoteLogger"/>
 
	<bean id="userService" class="org.springframework.flex.remoting.RemotingDestinationExporter">
        <property name="messageBroker" ref="_messageBroker"/>
        <property name="service" ref="userServiceBean"/>
    </bean> 
    
    <bean id="roleService" class="org.springframework.flex.remoting.RemotingDestinationExporter">
        <property name="messageBroker" ref="_messageBroker"/>
        <property name="service" ref="roleServiceBean"/>
    </bean>  
    
    <bean id="trackerService" class="org.springframework.flex.remoting.RemotingDestinationExporter">
        <property name="messageBroker" ref="_messageBroker"/>
        <property name="service" ref="trackerServiceBean"/>
    </bean>  
    
    <bean id="contextApplicationContextProvider" class="com.gencore.backend.java.context.ApplicationContextProvider"/>
    
    <bean id="registrationService" class="com.gencore.backend.java.service.mail.MailServiceImpl">
		<property name="mailSender" ref="mailSender"/>
		<property name="velocityEngine" ref="velocityEngine"/>
	</bean>
	

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}"/>
		<property name="port" value="${mail.port}"/>
		<property name="username" value="${mail.username}"/>
		<property name="password" value="${mail.password}"/>
	</bean>
	
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>
</beans>