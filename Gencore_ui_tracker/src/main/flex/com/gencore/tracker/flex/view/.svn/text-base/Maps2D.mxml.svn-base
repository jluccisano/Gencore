<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" 
		 xmlns:maps="com.google.maps.*">
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	
	
	
	
	<fx:Script>
		<![CDATA[
			import com.gencore.assets.ConstIcons;
			import com.gencore.commons.flex.model.MainModel;
			import com.gencore.commons.flex.vo.CourseVO;
			import com.gencore.commons.flex.vo.GPSLocationVO;
			import com.google.maps.LatLng;
			import com.google.maps.MapType;
			import com.google.maps.controls.ZoomControl;
			import com.google.maps.overlays.Marker;
			import com.google.maps.overlays.MarkerOptions;
			import com.google.maps.overlays.Polyline;
			import com.google.maps.overlays.PolylineOptions;
			import com.google.maps.styles.StrokeStyle;
			
			import mx.collections.ArrayCollection;
			
			[Bindable] public var currentCourse : CourseVO;
			
			public function onMapReady() : void {
				
				map.clearOverlays();
				map.enableScrollWheelZoom();
				map.enableContinuousZoom();
				map.addControl(new ZoomControl());
				
				var coordinates : Array = new Array();
				
				var gpsLocations : ArrayCollection = currentCourse.gpsLocations;
				
				for each (var gpsLocation : GPSLocationVO in gpsLocations) {
					coordinates.push(new LatLng(gpsLocation.lattitude, gpsLocation.longitude));
				}
				
				var startMarkerOptions : MarkerOptions = new MarkerOptions();
				startMarkerOptions.icon = new ConstIcons.flagGreenIcon();
				startMarkerOptions.tooltip = "Départ";
				startMarkerOptions.iconAlignment = MarkerOptions.ALIGN_HORIZONTAL_CENTER;
				startMarkerOptions.iconOffset = new Point(4, -32);
				
				var startMarker : Marker = new Marker(coordinates[0], startMarkerOptions);
				
				var endMarkerOptions : MarkerOptions = new MarkerOptions();
				endMarkerOptions.icon = new ConstIcons.flagBlackIcon();
				endMarkerOptions.tooltip = "Arrivée";
				endMarkerOptions.iconAlignment = MarkerOptions.ALIGN_HORIZONTAL_CENTER;
				endMarkerOptions.iconOffset = new Point(-4, -32);
				
				var endMarker : Marker = new Marker(coordinates[coordinates.length - 1], endMarkerOptions);
				
				map.addOverlay(startMarker);
				map.addOverlay(endMarker);
				
				map.setCenter(coordinates[0], 13, MapType.SATELLITE_MAP_TYPE);
				
				var polyline : Polyline = new Polyline(coordinates, new PolylineOptions({
					
					strokeStyle: new StrokeStyle({ thickness: 6, color: 0x123456, alpha: 0.5,
						pixelHinting: true })}));
				
				map.addOverlay(polyline);
			}

		]]>
	</fx:Script>
	

      <maps:Map id="map" key="{MainModel.GMAPSKEY}" width="100%" height="100%"/>
</s:Group>
